/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _plugins_Query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plugins/Query */ \"./src/plugins/Query.js\");\n/* harmony import */ var _nav__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nav */ \"./src/nav.js\");\n// SmoothScroll needs a require\nvar smoothScroll = __webpack_require__(/*! ./plugins/smooth-scroll */ \"./src/plugins/smooth-scroll.js\");\n\n\n\naddEventListener(\"load\", function () {\n  var ICON = Object(_plugins_Query__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\".Arrow\");\n  var FORM = document.forms.drop;\n  var LANG = Object(_plugins_Query__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"#lang\");\n  var scrolling = false;\n  /**\n   * Adds the '__sub' class if form exists\n   */\n\n  if (FORM) {\n    FORM.send.addEventListener(\"click\", function () {\n      FORM.classList.add(\"__sub\");\n    });\n  }\n  /**\n   * Updates breakpoint for arrow\n   * @returns {number} Third of the window's height\n   *\n   */\n\n\n  var breakpoint = function breakpoint() {\n    return Math.round(window.innerHeight * 0.33);\n  };\n  /**\n   * Adds or removes the '__fade' class\n   * @returns {undefined}\n   *\n  */\n\n\n  var arrowFade = function arrowFade() {\n    if (window.scrollY > breakpoint()) {\n      if (!ICON.classList.contains(\"__fade\")) {\n        ICON.classList.add(\"__fade\");\n      }\n    } else {\n      if (ICON.classList.contains(\"__fade\")) {\n        ICON.classList.remove(\"__fade\");\n      }\n    }\n\n    scrolling = false;\n    cancelAnimationFrame(arrowFade);\n  };\n  /**\n   * Changes location based on language selection\n   * @returns {undefined}\n   *\n   */\n\n\n  LANG.addEventListener(\"change\", function (event) {\n    window.location = event.target.value;\n  });\n  addEventListener(\"scroll\", function () {\n    if (!scrolling) requestAnimationFrame(arrowFade);\n    scrolling = true;\n  }, {\n    passive: true\n  });\n  Object(_nav__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n  smoothScroll(\"a[href*='#']\");\n}, {\n  once: true\n});\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/nav.js":
/*!********************!*\
  !*** ./src/nav.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _plugins_Query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plugins/Query */ \"./src/plugins/Query.js\");\n\n/**\n * Controls when the Nav is visibile or hidden on scroll\n * @returns {undefined}\n *\n */\n\nvar navScroll = function navScroll() {\n  var NAV = Object(_plugins_Query__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\".Nav\");\n  var navHeight = NAV.clientHeight;\n  var original = window.pageYOffset;\n  var isShowing = NAV.classList.contains(\"__show\");\n  var scrolling = false;\n  /**\n   * Upates availHeight by subtracting viewport height from html height\n   * @returns {number} Height of viewable html\n   *\n   */\n\n  var availHeight = function availHeight() {\n    return Object(_plugins_Query__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"html\").scrollHeight - window.innerHeight;\n  };\n  /**\n   * Determines whether to show or hide the Nav based on scroll\n   * @returns {undefined}\n   *\n   */\n\n\n  var toggleNav = function toggleNav() {\n    var update = window.pageYOffset; // 1.a. Check scroll position\n\n    if (update > navHeight) {\n      NAV.classList.add(\"__fixed\");\n      NAV.classList.add(\"__time\"); // 2. Check Available scroll height (top and bottom)\n\n      if (original > -1 && availHeight() > update) {\n        // 3. Decide nav visibility\n        // Scrolling down and is visible (Hide)\n        if (update > original && isShowing) {\n          NAV.classList.remove(\"__show\");\n          isShowing = false; // Or scrolling up and is not visible (Show)\n        } else if (update < original && !isShowing) {\n          NAV.classList.add(\"__show\");\n          isShowing = true;\n        }\n      } // 1.b. Or reset all at top\n\n    } else if (update === 0) {\n      NAV.classList.remove(\"__fixed\");\n      NAV.classList.remove(\"__show\"); // 1.c. Or remove transition in Nav height area\n    } else {\n      NAV.classList.remove(\"__time\");\n    } // Update scroll position\n\n\n    original = update; // Reset scroll\n\n    scrolling = false;\n    cancelAnimationFrame(toggleNav);\n  };\n\n  addEventListener(\"scroll\", function () {\n    if (!scrolling) requestAnimationFrame(toggleNav);\n    scrolling = true;\n  }, {\n    passive: true\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (navScroll);\n\n//# sourceURL=webpack:///./src/nav.js?");

/***/ }),

/***/ "./src/plugins/Query.js":
/*!******************************!*\
  !*** ./src/plugins/Query.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Decides which element(s) to select based on a selector\n * @param {string} el - Selector to query\n * @returns {(array|element)} Either a single element or array of elements\n *\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (el) {\n  el = el === \"body\" ? [document.body] : el === \"html\" ? [document.documentElement] : el === \"head\" ? [document.head] : _toConsumableArray(document.querySelectorAll(el));\n  return 1 < el.length ? el : el[0];\n});\n\n//# sourceURL=webpack:///./src/plugins/Query.js?");

/***/ }),

/***/ "./src/plugins/smooth-scroll.js":
/*!**************************************!*\
  !*** ./src/plugins/smooth-scroll.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * smooth-scroll v14.2.1: Animate scrolling to anchor links\n * (c) 2018 Chris Ferdinandi\n * MIT License\n * http://github.com/cferdinandi/smooth-scroll\n */\n(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return factory(root);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n  'use strict'; //\n  // Default settings\n  //\n\n  var defaults = {\n    // Selectors\n    ignore: '[data-scroll-ignore]',\n    header: null,\n    topOnEmptyHash: true,\n    // Speed & Easing\n    speed: 500,\n    clip: true,\n    offset: 0,\n    easing: 'easeInOutCubic',\n    customEasing: null,\n    // History\n    updateURL: true,\n    popstate: true,\n    // Custom Events\n    emitEvents: true\n  }; //\n  // Utility Methods\n  //\n\n  /**\n   * Check if browser supports required methods\n   * @return {Boolean} Returns true if all required methods are supported\n   */\n\n  var supports = function supports() {\n    return 'querySelector' in document && 'addEventListener' in window && 'requestAnimationFrame' in window && 'closest' in window.Element.prototype;\n  };\n  /**\n   * Merge two or more objects. Returns a new object.\n   * @param {Object}   objects  The objects to merge together\n   * @returns {Object}          Merged values of defaults and options\n   */\n\n\n  var extend = function extend() {\n    // Variables\n    var extended = {}; // Merge the object into the extended object\n\n    var merge = function merge(obj) {\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          extended[prop] = obj[prop];\n        }\n      }\n    }; // Loop through each object and conduct a merge\n\n\n    for (var i = 0; i < arguments.length; i++) {\n      merge(arguments[i]);\n    }\n\n    return extended;\n  };\n  /**\n   * Check to see if user prefers reduced motion\n   * @param  {Object} settings Script settings\n   */\n\n\n  var reduceMotion = function reduceMotion(settings) {\n    if ('matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Get the height of an element.\n   * @param  {Node} elem The element to get the height of\n   * @return {Number}    The element's height in pixels\n   */\n\n\n  var getHeight = function getHeight(elem) {\n    return parseInt(window.getComputedStyle(elem).height, 10);\n  };\n  /**\n   * Decode a URI, with error check\n   * @param  {String} hash The URI to decode\n   * @return {String}      A decoded URI (or the original string if an error is thrown)\n   */\n\n\n  var decode = function decode(hash) {\n    var decoded;\n\n    try {\n      decoded = decodeURIComponent(hash);\n    } catch (e) {\n      decoded = hash;\n    }\n\n    return decoded;\n  };\n  /**\n   * Escape special characters for use with querySelector\n   * @author Mathias Bynens\n   * @link https://github.com/mathiasbynens/CSS.escape\n   * @param {String} id The anchor ID to escape\n   */\n\n\n  var escapeCharacters = function escapeCharacters(id) {\n    // Remove leading hash\n    if (id.charAt(0) === '#') {\n      id = id.substr(1);\n    }\n\n    var string = String(id);\n    var length = string.length;\n    var index = -1;\n    var codeUnit;\n    var result = '';\n    var firstCodeUnit = string.charCodeAt(0);\n\n    while (++index < length) {\n      codeUnit = string.charCodeAt(index); // Note: there’s no need to special-case astral symbols, surrogate\n      // pairs, or lone surrogates.\n      // If the character is NULL (U+0000), then throw an\n      // `InvalidCharacterError` exception and terminate these steps.\n\n      if (codeUnit === 0x0000) {\n        throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\n      }\n\n      if ( // If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n      // U+007F, […]\n      codeUnit >= 0x0001 && codeUnit <= 0x001F || codeUnit == 0x007F || // If the character is the first character and is in the range [0-9]\n      // (U+0030 to U+0039), […]\n      index === 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039 || // If the character is the second character and is in the range [0-9]\n      // (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n      index === 1 && codeUnit >= 0x0030 && codeUnit <= 0x0039 && firstCodeUnit === 0x002D) {\n        // http://dev.w3.org/csswg/cssom/#escape-a-character-as-code-point\n        result += '\\\\' + codeUnit.toString(16) + ' ';\n        continue;\n      } // If the character is not handled by one of the above rules and is\n      // greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n      // is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n      // U+005A), or [a-z] (U+0061 to U+007A), […]\n\n\n      if (codeUnit >= 0x0080 || codeUnit === 0x002D || codeUnit === 0x005F || codeUnit >= 0x0030 && codeUnit <= 0x0039 || codeUnit >= 0x0041 && codeUnit <= 0x005A || codeUnit >= 0x0061 && codeUnit <= 0x007A) {\n        // the character itself\n        result += string.charAt(index);\n        continue;\n      } // Otherwise, the escaped character.\n      // http://dev.w3.org/csswg/cssom/#escape-a-character\n\n\n      result += '\\\\' + string.charAt(index);\n    } // Return sanitized hash\n\n\n    var hash;\n\n    try {\n      hash = decodeURIComponent('#' + result);\n    } catch (e) {\n      hash = '#' + result;\n    }\n\n    return hash;\n  };\n  /**\n   * Calculate the easing pattern\n   * @link https://gist.github.com/gre/1650294\n   * @param {String} type Easing pattern\n   * @param {Number} time Time animation should take to complete\n   * @returns {Number}\n   */\n\n\n  var easingPattern = function easingPattern(settings, time) {\n    var pattern; // Default Easing Patterns\n\n    if (settings.easing === 'easeInQuad') pattern = time * time; // accelerating from zero velocity\n\n    if (settings.easing === 'easeOutQuad') pattern = time * (2 - time); // decelerating to zero velocity\n\n    if (settings.easing === 'easeInOutQuad') pattern = time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time; // acceleration until halfway, then deceleration\n\n    if (settings.easing === 'easeInCubic') pattern = time * time * time; // accelerating from zero velocity\n\n    if (settings.easing === 'easeOutCubic') pattern = --time * time * time + 1; // decelerating to zero velocity\n\n    if (settings.easing === 'easeInOutCubic') pattern = time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1; // acceleration until halfway, then deceleration\n\n    if (settings.easing === 'easeInQuart') pattern = time * time * time * time; // accelerating from zero velocity\n\n    if (settings.easing === 'easeOutQuart') pattern = 1 - --time * time * time * time; // decelerating to zero velocity\n\n    if (settings.easing === 'easeInOutQuart') pattern = time < 0.5 ? 8 * time * time * time * time : 1 - 8 * --time * time * time * time; // acceleration until halfway, then deceleration\n\n    if (settings.easing === 'easeInQuint') pattern = time * time * time * time * time; // accelerating from zero velocity\n\n    if (settings.easing === 'easeOutQuint') pattern = 1 + --time * time * time * time * time; // decelerating to zero velocity\n\n    if (settings.easing === 'easeInOutQuint') pattern = time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * --time * time * time * time * time; // acceleration until halfway, then deceleration\n    // Custom Easing Patterns\n\n    if (!!settings.customEasing) pattern = settings.customEasing(time);\n    return pattern || time; // no easing, no acceleration\n  };\n  /**\n   * Determine the document's height\n   * @returns {Number}\n   */\n\n\n  var getDocumentHeight = function getDocumentHeight() {\n    return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n  };\n  /**\n   * Calculate how far to scroll\n   * Clip support added by robjtede - https://github.com/cferdinandi/smooth-scroll/issues/405\n   * @param {Element} anchor       The anchor element to scroll to\n   * @param {Number}  headerHeight Height of a fixed header, if any\n   * @param {Number}  offset       Number of pixels by which to offset scroll\n   * @param {Boolean} clip         If true, adjust scroll distance to prevent abrupt stops near the bottom of the page\n   * @returns {Number}\n   */\n\n\n  var getEndLocation = function getEndLocation(anchor, headerHeight, offset, clip) {\n    var location = 0;\n\n    if (anchor.offsetParent) {\n      do {\n        location += anchor.offsetTop;\n        anchor = anchor.offsetParent;\n      } while (anchor);\n    }\n\n    location = Math.max(location - headerHeight - offset, 0);\n\n    if (clip) {\n      location = Math.min(location, getDocumentHeight() - window.innerHeight);\n    }\n\n    return location;\n  };\n  /**\n   * Get the height of the fixed header\n   * @param  {Node}   header The header\n   * @return {Number}        The height of the header\n   */\n\n\n  var getHeaderHeight = function getHeaderHeight(header) {\n    return !header ? 0 : getHeight(header) + header.offsetTop;\n  };\n  /**\n   * Update the URL\n   * @param  {Node}    anchor  The anchor that was scrolled to\n   * @param  {Boolean} isNum   If true, anchor is a number\n   * @param  {Object}  options Settings for Smooth Scroll\n   */\n\n\n  var updateURL = function updateURL(anchor, isNum, options) {\n    // Bail if the anchor is a number\n    if (isNum) return; // Verify that pushState is supported and the updateURL option is enabled\n\n    if (!history.pushState || !options.updateURL) return; // Update URL\n\n    history.pushState({\n      smoothScroll: JSON.stringify(options),\n      anchor: anchor.id\n    }, document.title, anchor === document.documentElement ? '#top' : '#' + anchor.id);\n  };\n  /**\n   * Bring the anchored element into focus\n   * @param {Node}     anchor      The anchor element\n   * @param {Number}   endLocation The end location to scroll to\n   * @param {Boolean}  isNum       If true, scroll is to a position rather than an element\n   */\n\n\n  var adjustFocus = function adjustFocus(anchor, endLocation, isNum) {\n    // Is scrolling to top of page, blur\n    if (anchor === 0) {\n      document.body.focus();\n    } // Don't run if scrolling to a number on the page\n\n\n    if (isNum) return; // Otherwise, bring anchor element into focus\n\n    anchor.focus();\n\n    if (document.activeElement !== anchor) {\n      anchor.setAttribute('tabindex', '-1');\n      anchor.focus();\n      anchor.style.outline = 'none';\n    }\n\n    window.scrollTo(0, endLocation);\n  };\n  /**\n   * Emit a custom event\n   * @param  {String} type    The event type\n   * @param  {Object} options The settings object\n   * @param  {Node}   anchor  The anchor element\n   * @param  {Node}   toggle  The toggle element\n   */\n\n\n  var emitEvent = function emitEvent(type, options, anchor, toggle) {\n    if (!options.emitEvents || typeof window.CustomEvent !== 'function') return;\n    var event = new CustomEvent(type, {\n      bubbles: true,\n      detail: {\n        anchor: anchor,\n        toggle: toggle\n      }\n    });\n    document.dispatchEvent(event);\n  }; //\n  // SmoothScroll Constructor\n  //\n\n\n  var SmoothScroll = function SmoothScroll(selector, options) {\n    //\n    // Variables\n    //\n    var smoothScroll = {}; // Object for public APIs\n\n    var settings, anchor, toggle, fixedHeader, headerHeight, eventTimeout, animationInterval; //\n    // Methods\n    //\n\n    /**\n     * Cancel a scroll-in-progress\n     */\n\n    smoothScroll.cancelScroll = function (noEvent) {\n      cancelAnimationFrame(animationInterval);\n      animationInterval = null;\n      if (noEvent) return;\n      emitEvent('scrollCancel', settings);\n    };\n    /**\n     * Start/stop the scrolling animation\n     * @param {Node|Number} anchor  The element or position to scroll to\n     * @param {Element}     toggle  The element that toggled the scroll event\n     * @param {Object}      options\n     */\n\n\n    smoothScroll.animateScroll = function (anchor, toggle, options) {\n      // Local settings\n      var animateSettings = extend(settings || defaults, options || {}); // Merge user options with defaults\n      // Selectors and variables\n\n      var isNum = Object.prototype.toString.call(anchor) === '[object Number]' ? true : false;\n      var anchorElem = isNum || !anchor.tagName ? null : anchor;\n      if (!isNum && !anchorElem) return;\n      var startLocation = window.pageYOffset; // Current location on the page\n\n      if (animateSettings.header && !fixedHeader) {\n        // Get the fixed header if not already set\n        fixedHeader = document.querySelector(animateSettings.header);\n      }\n\n      if (!headerHeight) {\n        // Get the height of a fixed header if one exists and not already set\n        headerHeight = getHeaderHeight(fixedHeader);\n      }\n\n      var endLocation = isNum ? anchor : getEndLocation(anchorElem, headerHeight, parseInt(typeof animateSettings.offset === 'function' ? animateSettings.offset(anchor, toggle) : animateSettings.offset, 10), animateSettings.clip); // Location to scroll to\n\n      var distance = endLocation - startLocation; // distance to travel\n\n      var documentHeight = getDocumentHeight();\n      var timeLapsed = 0;\n      var start, percentage, position;\n      /**\n       * Stop the scroll animation when it reaches its target (or the bottom/top of page)\n       * @param {Number} position Current position on the page\n       * @param {Number} endLocation Scroll to location\n       * @param {Number} animationInterval How much to scroll on this loop\n       */\n\n      var stopAnimateScroll = function stopAnimateScroll(position, endLocation) {\n        // Get the current location\n        var currentLocation = window.pageYOffset; // Check if the end location has been reached yet (or we've hit the end of the document)\n\n        if (position == endLocation || currentLocation == endLocation || (startLocation < endLocation && window.innerHeight + currentLocation) >= documentHeight) {\n          // Clear the animation timer\n          smoothScroll.cancelScroll(true); // Bring the anchored element into focus\n\n          adjustFocus(anchor, endLocation, isNum); // Emit a custom event\n\n          emitEvent('scrollStop', animateSettings, anchor, toggle); // Reset start\n\n          start = null;\n          animationInterval = null;\n          return true;\n        }\n      };\n      /**\n       * Loop scrolling animation\n       */\n\n\n      var loopAnimateScroll = function loopAnimateScroll(timestamp) {\n        if (!start) {\n          start = timestamp;\n        }\n\n        timeLapsed += timestamp - start;\n        percentage = timeLapsed / parseInt(animateSettings.speed, 10);\n        percentage = percentage > 1 ? 1 : percentage;\n        position = startLocation + distance * easingPattern(animateSettings, percentage);\n        window.scrollTo(0, Math.floor(position));\n\n        if (!stopAnimateScroll(position, endLocation)) {\n          animationInterval = window.requestAnimationFrame(loopAnimateScroll);\n          start = timestamp;\n        }\n      };\n      /**\n       * Reset position to fix weird iOS bug\n       * @link https://github.com/cferdinandi/smooth-scroll/issues/45\n       */\n\n\n      if (window.pageYOffset === 0) {\n        window.scrollTo(0, 0);\n      } // Update the URL\n\n\n      updateURL(anchor, isNum, animateSettings); // Emit a custom event\n\n      emitEvent('scrollStart', animateSettings, anchor, toggle); // Start scrolling animation\n\n      smoothScroll.cancelScroll(true);\n      window.requestAnimationFrame(loopAnimateScroll);\n    };\n    /**\n     * If smooth scroll element clicked, animate scroll\n     */\n\n\n    var clickHandler = function clickHandler(event) {\n      // Don't run if the user prefers reduced motion\n      if (reduceMotion(settings)) return; // Don't run if right-click or command/control + click\n\n      if (event.button !== 0 || event.metaKey || event.ctrlKey) return; // Check if event.target has closest() method\n      // By @totegi - https://github.com/cferdinandi/smooth-scroll/pull/401/\n\n      if (!('closest' in event.target)) return; // Check if a smooth scroll link was clicked\n\n      toggle = event.target.closest(selector);\n      if (!toggle || toggle.tagName.toLowerCase() !== 'a' || event.target.closest(settings.ignore)) return; // Only run if link is an anchor and points to the current page\n\n      if (toggle.hostname !== window.location.hostname || toggle.pathname !== window.location.pathname || !/#/.test(toggle.href)) return; // Get an escaped version of the hash\n\n      var hash = escapeCharacters(decode(toggle.hash)); // Get the anchored element\n\n      var anchor = settings.topOnEmptyHash && hash === '#' ? document.documentElement : document.querySelector(hash);\n      anchor = !anchor && hash === '#top' ? document.documentElement : anchor; // If anchored element exists, scroll to it\n\n      if (!anchor) return;\n      event.preventDefault();\n      smoothScroll.animateScroll(anchor, toggle);\n    };\n    /**\n     * Animate scroll on popstate events\n     */\n\n\n    var popstateHandler = function popstateHandler(event) {\n      // Stop if history.state doesn't exist (ex. if clicking on a broken anchor link).\n      // fixes `Cannot read property 'smoothScroll' of null` error getting thrown.\n      if (history.state === null) return; // Only run if state is a popstate record for this instantiation\n\n      if (!history.state.smoothScroll || history.state.smoothScroll !== JSON.stringify(settings)) return; // Only run if state includes an anchor\n\n      if (!history.state.anchor) return; // Get the anchor\n\n      var anchor = document.querySelector(escapeCharacters(decode(history.state.anchor)));\n      if (!anchor) return; // Animate scroll to anchor link\n\n      smoothScroll.animateScroll(anchor, null, {\n        updateURL: false\n      });\n    };\n    /**\n     * On window scroll and resize, only run events at a rate of 15fps for better performance\n     */\n\n\n    var resizeThrottler = function resizeThrottler(event) {\n      if (!eventTimeout) {\n        eventTimeout = setTimeout(function () {\n          eventTimeout = null; // Reset timeout\n\n          headerHeight = getHeaderHeight(fixedHeader); // Get the height of a fixed header if one exists\n        }, 66);\n      }\n    };\n    /**\n     * Destroy the current initialization.\n     */\n\n\n    smoothScroll.destroy = function () {\n      // If plugin isn't already initialized, stop\n      if (!settings) return; // Remove event listeners\n\n      document.removeEventListener('click', clickHandler, false);\n      window.removeEventListener('resize', resizeThrottler, false);\n      window.removeEventListener('popstate', popstateHandler, false); // Cancel any scrolls-in-progress\n\n      smoothScroll.cancelScroll(); // Reset variables\n\n      settings = null;\n      anchor = null;\n      toggle = null;\n      fixedHeader = null;\n      headerHeight = null;\n      eventTimeout = null;\n      animationInterval = null;\n    };\n    /**\n     * Initialize Smooth Scroll\n     * @param {Object} options User settings\n     */\n\n\n    smoothScroll.init = function (options) {\n      // feature test\n      if (!supports()) throw 'Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.'; // Destroy any existing initializations\n\n      smoothScroll.destroy(); // Selectors and variables\n\n      settings = extend(defaults, options || {}); // Merge user options with defaults\n\n      fixedHeader = settings.header ? document.querySelector(settings.header) : null; // Get the fixed header\n\n      headerHeight = getHeaderHeight(fixedHeader); // When a toggle is clicked, run the click handler\n\n      document.addEventListener('click', clickHandler, false); // If window is resized and there's a fixed header, recalculate its size\n\n      if (fixedHeader) {\n        window.addEventListener('resize', resizeThrottler, false);\n      } // If updateURL and popState are enabled, listen for pop events\n\n\n      if (settings.updateURL && settings.popstate) {\n        window.addEventListener('popstate', popstateHandler, false);\n      }\n    }; //\n    // Initialize plugin\n    //\n\n\n    smoothScroll.init(options); //\n    // Public APIs\n    //\n\n    return smoothScroll;\n  };\n\n  return SmoothScroll;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./src/plugins/smooth-scroll.js?");

/***/ })

/******/ });